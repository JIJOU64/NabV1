# Generated by Django 4.1 on 2024-10-21 08:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClientProgress',
            fields=[
                ('id_progress', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name_progress', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'client_progress',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClientsData',
            fields=[
                ('id_client', models.SmallAutoField(primary_key=True, serialize=False)),
                ('file_creation_date', models.DateField(blank=True, null=True)),
                ('file_closing_date', models.DateField(blank=True, null=True)),
                ('id_progress_client_progress', models.ForeignKey(blank=True, db_column='id_progress_client_progress', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='crmapp.clientprogress')),
            ],
            options={
                'db_table': 'clients_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainingOutline',
            fields=[
                ('id_outline', models.SmallAutoField(primary_key=True, serialize=False)),
                ('outline_name', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'training_outline',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainingStatus',
            fields=[
                ('id_status', models.SmallAutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'training_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainingTitle',
            fields=[
                ('id_title', models.SmallAutoField(primary_key=True, serialize=False)),
                ('title_name', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'training_title',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id_user', models.SmallAutoField(primary_key=True, serialize=False)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(blank=True, max_length=40, null=True)),
                ('password', models.CharField(blank=True, max_length=30, null=True)),
                ('id_client_clients_data', models.OneToOneField(blank=True, db_column='id_client_clients_data', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='crmapp.clientsdata')),
            ],
            options={
                'db_table': 'user_profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainingData',
            fields=[
                ('id_training', models.SmallAutoField(primary_key=True, serialize=False)),
                ('follow_edof', models.CharField(blank=True, max_length=100, null=True)),
                ('start_session', models.DateField(blank=True, null=True)),
                ('end_session', models.DateField(blank=True, null=True)),
                ('number_hours', models.SmallIntegerField(blank=True, null=True)),
                ('cost_assessment', models.SmallIntegerField(blank=True, null=True)),
                ('number_trainees', models.SmallIntegerField(blank=True, null=True)),
                ('id_outline_training_outline', models.ForeignKey(blank=True, db_column='id_outline_training_outline', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='crmapp.trainingoutline')),
                ('id_status_training_status', models.ForeignKey(blank=True, db_column='id_status_training_status', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='crmapp.trainingstatus')),
                ('id_title_training_title', models.ForeignKey(blank=True, db_column='id_title_training_title', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='crmapp.trainingtitle')),
            ],
            options={
                'db_table': 'training_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FollowUpAfter',
            fields=[
                ('id_followup', models.SmallAutoField(primary_key=True, serialize=False)),
                ('evaluation_sheet', models.CharField(blank=True, max_length=100, null=True)),
                ('planned_date', models.DateField(blank=True, null=True)),
                ('actual_date', models.DateField(blank=True, null=True)),
                ('followup_interval', models.SmallIntegerField(blank=True, null=True)),
                ('id_training_training_data', models.ForeignKey(blank=True, db_column='id_training_training_data', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='crmapp.trainingdata')),
            ],
            options={
                'db_table': 'follow_up_after',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='clientsdata',
            name='id_training_training_data',
            field=models.OneToOneField(blank=True, db_column='id_training_training_data', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='crmapp.trainingdata'),
        ),
    ]
